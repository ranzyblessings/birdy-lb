name: Deploy Docker

on:
  workflow_run:
    workflows: [ "Build and Test" ]
    types:
      - completed

permissions:
  issues: write

jobs:
  build-and-push:
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.event == 'push' &&
          github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 23 (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'corretto'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker images
        run: |
          IMAGE_NAME="ranzyblessingsdocker/birdy-lb"
          TAG_LATEST="${IMAGE_NAME}:latest"
          TAG_SHA="${IMAGE_NAME}:${{ github.event.workflow_run.head_commit.id }}"
          
          ./gradlew bootBuildImage --imageName="$TAG_LATEST"
          ./gradlew bootBuildImage --imageName="$TAG_SHA"

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ranzyblessingsdocker/birdy-lb:latest'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker images
        run: |
          IMAGE_NAME="ranzyblessingsdocker/birdy-lb"
          docker push "$IMAGE_NAME:${{ github.event.workflow_run.head_commit.id }}"
          docker push "$IMAGE_NAME:latest"

  cleanup:
    needs: build-and-push
    if: always() && needs.build-and-push.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Prune unused Docker images
        run: docker image prune -f --filter "dangling=true"

  notify:
    needs: build-and-push
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create issue on failure
        if: needs.build-and-push.result == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Docker Deployment Failed',
              body: 'Deployment failed for birdy-lb. Check run: ${{ github.event.workflow_run.html_url }}'
            })